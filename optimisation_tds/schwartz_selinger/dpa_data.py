import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import interp1d

dpa_0_23 = [
    0.102056052698212,
    0.104538708276626,
    0.105107903940497,
    0.108922419085298,
    0.117172094587751,
    0.112950254945403,
    0.116522094112993,
    0.120111444310809,
    0.121674285076753,
    0.125401182797911,
    0.127927678224403,
    0.129049467700586,
    0.13391342411774,
    0.132232141034974,
    0.140214318737142,
    0.138944295774648,
    0.144595987007438,
    0.143685600253205,
    0.149446168745055,
    0.15534924165216,
    0.156469474315556,
    0.161921320604526,
    0.163234348963444,
    0.169493732726697,
    0.172944003497389,
    0.176503126618136,
    0.180586036287387,
    0.185151159376484,
    0.189351789001424,
    0.194557559234056,
    0.197028881215382,
    0.201748054043361,
    0.206358648520336,
    0.207946697198924,
    0.211332590647254,
    0.218567759756291,
    0.22058974820383,
    0.223663681278683,
    0.226516272938756,
    0.227695415398006,
    0.228392207437886,
    0.226027184633645,
    0.232381907611964,
    0.229743433755341,
    0.231503130384555,
    0.230098698433296,
    0.226935229941446,
    0.225170426966292,
    0.2203806246558,
    0.213236323595506,
    0.206723465801551,
    0.199099753584428,
    0.192287452191802,
    0.185014707849343,
    0.172962872068365,
    0.164647249976262,
    0.149643821696471,
    0.138480502563697,
    0.126850089776863,
    0.115483550530147,
    0.102082717787625,
    0.0913651951099858,
    0.0785348906630796,
    0.0675455360183573,
    0.0570024884633644,
    0.0470853282212375,
    0.0382788181484412,
    0.0302244068238645,
    0.0238452941937015,
    0.018375402576357,
    0.0142837336556417,
    0.0108017437585061,
    0.00763089223769584,
    0.00507940187054914,
    0.00346126809621776,
    0.00228349687767052,
    0.00148005070739041,
    8.92612560373477e-4,
    5.69101881468587e-4,
    3.42810125842697e-4,
    1.6164676110144e-4,
    1.72644198718152e-4,
    4.44628721000158e-5,
    7.27174673682545e-6,
    1.80153914875772e-5,
    5.41755406235164e-6,
    1.81362836050008e-7,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
]
x_values = [
    0.03,
    0.06,
    0.09,
    0.12,
    0.15,
    0.18,
    0.21,
    0.24,
    0.27,
    0.30,
    0.33,
    0.36,
    0.39,
    0.42,
    0.45,
    0.48,
    0.51,
    0.54,
    0.57,
    0.60,
    0.63,
    0.66,
    0.69,
    0.72,
    0.75,
    0.78,
    0.81,
    0.84,
    0.87,
    0.90,
    0.93,
    0.96,
    0.99,
    1.02,
    1.05,
    1.08,
    1.11,
    1.14,
    1.17,
    1.20,
    1.23,
    1.26,
    1.29,
    1.32,
    1.35,
    1.38,
    1.41,
    1.44,
    1.47,
    1.50,
    1.53,
    1.56,
    1.59,
    1.62,
    1.65,
    1.68,
    1.71,
    1.74,
    1.77,
    1.80,
    1.83,
    1.86,
    1.89,
    1.92,
    1.95,
    1.98,
    2.01,
    2.04,
    2.07,
    2.10,
    2.13,
    2.16,
    2.19,
    2.22,
    2.25,
    2.28,
    2.31,
    2.34,
    2.37,
    2.40,
    2.43,
    2.46,
    2.49,
    2.52,
    2.55,
    2.58,
    2.61,
    2.64,
    2.67,
    2.70,
    2.73,
    2.76,
    2.79,
    2.82,
    2.85,
    2.88,
    2.91,
    2.94,
    2.97,
    3.00,
]

x_values = np.array(x_values) * 1e-06
dpa_0_23 = np.array(dpa_0_23)
dpa_2_50 = (dpa_0_23 / 0.23) * 2.5
dpa_0_50 = (dpa_0_23 / 0.23) * 0.5
dpa_0_10 = (dpa_0_23 / 0.23) * 0.1
dpa_0_023 = (dpa_0_23 / 0.23) * 0.023
dpa_0_005 = (dpa_0_23 / 0.23) * 0.005
dpa_0_001 = (dpa_0_23 / 0.23) * 0.001

dpa_data = [dpa_2_50, dpa_0_50, dpa_0_23, dpa_0_10, dpa_0_023, dpa_0_005, dpa_0_001]

x_range = np.linspace(0, 2.61e-06, 1000)

if __name__ == "__main__":

    plt.rc("text", usetex=True)
    plt.rc("font", family="serif", size=12)
    plt.figure()
    for dpa_dataset in dpa_data:
        plt.scatter(x_values, dpa_dataset, marker="x")
        interp_model = interp1d(x_values, dpa_dataset, fill_value="extrapolate")
        interp_values = interp_model(x_range)
        plt.plot(x_range, interp_values, label="{:.3f} dpa".format(interp_values.max()))
    plt.xlim(0, 3e-06)
    plt.ylim(1e-10, 1e1)
    plt.yscale("log")
    plt.xlabel(r"x (m)")
    plt.legend()
    plt.ylabel("Neutron damage (dpa)")
    plt.gca().spines["right"].set_visible(False)
    plt.gca().spines["top"].set_visible(False)

    plt.figure()
    for dpa_dataset in dpa_data:
        plt.scatter(x_values, dpa_dataset, marker="x")
        interp_model = interp1d(x_values, dpa_dataset, fill_value="extrapolate")
        interp_values = interp_model(x_range)
        plt.plot(x_range, interp_values, label="{:.3f} dpa".format(interp_values.max()))
    plt.xlim(0, 3e-06)
    plt.ylim(0, 3)
    plt.xlabel(r"x (m)")
    plt.legend()
    plt.ylabel("Neutron damage (dpa)")
    plt.gca().spines["right"].set_visible(False)
    plt.gca().spines["top"].set_visible(False)

    plt.show()
